{"ast":null,"code":"class priority_queue {\n  constructor() {\n    this.pq = [];\n  }\n  // apply heapify on a child heap with top ind  -> root .\n  heapify(root) {\n    let left_ind = 2 * root + 1;\n    let right_ind = 2 * root + 2;\n    let largest = root;\n    if (left_ind < this.pq.length && this.pq[left_ind][0] > this.pq[largest][0]) {\n      largest = left_ind;\n    }\n    if (right_ind < this.pq.length && this.pq[right_ind][0] > this.pq[largest][0]) {\n      largest = right_ind;\n    }\n    if (largest !== root) {\n      //swap\n      let temp = this.pq[root][0];\n      this.pq[root][0] = this.pq[largest][0];\n      this.pq[largest][0] = temp;\n      //swap\n      temp = this.pq[root][1];\n      this.pq[root][1] = this.pq[largest][1];\n      this.pq[largest][1] = temp;\n      this.heapify(largest); // recursive call to check further\n    }\n  }\n  // insert new element in heap .\n  insert(element) {\n    this.pq.push(element);\n    let ind = this.pq.length - 1;\n    while (ind !== 0) {\n      let par = Math.floor((ind - 1) / 2);\n      if (this.pq[par][0] < this.pq[ind][0]) {\n        //swap\n        let temp = this.pq[ind][0];\n        this.pq[ind][0] = this.pq[par][0];\n        this.pq[par][0] = temp;\n        // swap\n        temp = this.pq[ind][1];\n        this.pq[ind][1] = this.pq[par][1];\n        this.pq[par][1] = temp;\n      } else break;\n    }\n  }\n  // remove top element of heap .\n  remove() {\n    let last_ind = this.pq.length - 1;\n    //swap\n    let temp = this.pq[last_ind][0];\n    this.pq[last_ind][0] = this.pq[0][0];\n    this.pq[0][0] = temp;\n    //swap\n    temp = this.pq[last_ind][1];\n    this.pq[last_ind][0] = this.pq[0][1];\n    this.pq[0][1] = temp;\n    this.pq.pop();\n    this.heapify(0);\n  }\n  // get the top element of heap .\n  top() {\n    return JSON.parse(JSON.stringify(this.pq[0]));\n  }\n  // check heap is empty or not .\n  isEmpty() {\n    return this.pq.length === 0;\n  }\n}\nfunction billCalculator(members, expense) {\n  let size = members.length;\n  let individual = expense / size;\n  var receiver = new priority_queue(); // heap for member recieve money from others\n  var giver = new priority_queue(); // heap for member give mone to other members\n\n  for (let [member, amount] of members) {\n    if (amount > individual) {\n      // if spend more money from avg spend\n      receiver.insert([amount - individual, member]);\n    } else if (amount < individual) {\n      // if spend less money from avg spend\n      giver.insert([individual - amount, member]);\n    }\n  }\n  let ans = []; // resultant array to store details of min. no. of transactions to settle down bills .\n\n  while (!receiver.isEmpty() && !giver.isEmpty()) {\n    let a = receiver.top();\n    let b = giver.top();\n    receiver.remove();\n    giver.remove();\n    if (a[0] === b[0]) {\n      ans.push([b[1], a[1], a[0]]);\n    } else if (a[0] > b[0]) {\n      ans.push([b[1], a[1], b[0]]);\n      receiver.insert([a[0] - b[0], a[1]]);\n    } else {\n      ans.push([b[1], a[1], a[0]]);\n      giver.insert([b[0] - a[0], b[1]]);\n    }\n  }\n  return ans;\n}\nexport default billCalculator;","map":{"version":3,"names":["priority_queue","constructor","pq","heapify","root","left_ind","right_ind","largest","length","temp","insert","element","push","ind","par","Math","floor","remove","last_ind","pop","top","JSON","parse","stringify","isEmpty","billCalculator","members","expense","size","individual","receiver","giver","member","amount","ans","a","b"],"sources":["C:/Users/Aman/Desktop/split-expense/frontend/src/service/service.js"],"sourcesContent":["\r\nclass priority_queue {\r\n  constructor() {\r\n    this.pq = [];\r\n  }\r\n  // apply heapify on a child heap with top ind  -> root .\r\n  heapify(root){\r\n      let left_ind = 2 * root +1;\r\n      let right_ind = 2 * root +2 ; \r\n      let largest = root;\r\n      if (left_ind < this.pq.length && this.pq[left_ind][0] > this.pq[largest][0]) {\r\n        largest = left_ind;\r\n      }\r\n      if (right_ind < this.pq.length && this.pq[right_ind][0] > this.pq[largest][0]) {\r\n        largest = right_ind;\r\n      }\r\n      if (largest !== root) {\r\n        //swap\r\n        let temp = this.pq[root][0];\r\n        this.pq[root][0] = this.pq[largest][0];\r\n        this.pq[largest][0] = temp;\r\n        //swap\r\n        temp = this.pq[root][1];\r\n        this.pq[root][1] = this.pq[largest][1];\r\n        this.pq[largest][1] = temp;\r\n\r\n        this.heapify(largest);  // recursive call to check further\r\n      }\r\n  }\r\n  // insert new element in heap .\r\n  insert(element) {\r\n    this.pq.push(element);\r\n    let ind = this.pq.length-1;\r\n    while(ind!==0 ){\r\n      let par = Math.floor((ind-1)/2) ;\r\n      \r\n      if(this.pq[par][0] < this.pq[ind][0]){\r\n        //swap\r\n        let temp = this.pq[ind][0];\r\n        this.pq[ind][0] = this.pq[par][0];\r\n        this.pq[par][0] = temp;\r\n        // swap\r\n        temp=this.pq[ind][1];\r\n        this.pq[ind][1] = this.pq[par][1];\r\n        this.pq[par][1] = temp;\r\n      }\r\n      else break ;\r\n    }\r\n  }\r\n  // remove top element of heap .\r\n  remove() {\r\n    let last_ind = this.pq.length-1;\r\n    //swap\r\n    let temp = this.pq[last_ind][0];\r\n    this.pq[last_ind][0] = this.pq[0][0];\r\n    this.pq[0][0] = temp;\r\n    //swap\r\n    temp = this.pq[last_ind][1];\r\n    this.pq[last_ind][0] = this.pq[0][1];\r\n    this.pq[0][1] = temp;\r\n\r\n    this.pq.pop();\r\n    this.heapify(0);\r\n  }\r\n  // get the top element of heap .\r\n  top() {\r\n    return JSON.parse(JSON.stringify(this.pq[0]));\r\n  }\r\n  // check heap is empty or not .\r\n  isEmpty() {\r\n    return (this.pq.length === 0);\r\n  }\r\n}\r\n\r\n\r\nfunction billCalculator(members,expense) {\r\n\r\n    let size = members.length;\r\n    let individual = expense/size ;\r\n    var receiver = new priority_queue();  // heap for member recieve money from others\r\n    var giver = new priority_queue();     // heap for member give mone to other members\r\n\r\n    for (let [member,amount] of members) {\r\n      if (amount > individual) {           // if spend more money from avg spend\r\n        receiver.insert([amount - individual, member]);\r\n      } \r\n      else if (amount < individual) {      // if spend less money from avg spend\r\n        giver.insert([individual -amount, member]);\r\n      }\r\n    }\r\n\r\n    let ans = [];  // resultant array to store details of min. no. of transactions to settle down bills .\r\n\r\n    while (!receiver.isEmpty() && !giver.isEmpty()) {\r\n      let a = receiver.top();\r\n      let b = giver.top();\r\n      \r\n      receiver.remove();\r\n      giver.remove();\r\n\r\n      if (a[0] === b[0]) {\r\n        ans.push([b[1], a[1], a[0]]);\r\n      } \r\n      else if (a[0] > b[0]) {\r\n        ans.push([b[1], a[1], b[0]]);\r\n        receiver.insert([a[0] - b[0], a[1]]);\r\n      } \r\n      else {\r\n        ans.push([b[1], a[1], a[0]]);\r\n        giver.insert([b[0] - a[0], b[1]]);\r\n      }\r\n\r\n    }\r\n\r\n    return ans;\r\n}\r\n\r\nexport default billCalculator ; \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}