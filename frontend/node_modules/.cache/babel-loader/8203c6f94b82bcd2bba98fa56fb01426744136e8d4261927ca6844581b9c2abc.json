{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aman\\\\Desktop\\\\split-expense\\\\frontend\\\\src\\\\components\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport authStore from './AuthStore';\nimport loadingImg from \"../loading.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const store = authStore();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    console.log(e);\n    setIsLoading(true);\n    e.preventDefault();\n    await store.login();\n    setIsLoading(false);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-form-div\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loadingImg,\n        className: \"loading-img\",\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"form-heading\",\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        placeholder: \"Enter Email\",\n        value: store.loginForm.email,\n        onChange: store.updateLoginForm,\n        type: \"email\",\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        placeholder: \"Enter Password\",\n        value: store.loginForm.password,\n        onChange: store.updateLoginForm,\n        type: \"password\",\n        name: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-link\",\n      children: [\"Are you not registered?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/users/signup\",\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Ej5jTOt3yl9v3vHlRlQSgdDFKDM=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Link","useNavigate","authStore","loadingImg","jsxDEV","_jsxDEV","LoginPage","_s","isLoading","setIsLoading","store","navigate","handleLogin","e","console","log","preventDefault","login","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","loginForm","email","onChange","updateLoginForm","type","name","required","password","to","_c","$RefreshReg$"],"sources":["C:/Users/Aman/Desktop/split-expense/frontend/src/components/LoginPage.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { Link , useNavigate } from 'react-router-dom'\r\nimport authStore from './AuthStore';\r\nimport loadingImg from \"../loading.png\" ;\r\nexport default function LoginPage() {\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const store = authStore();\r\n    const navigate = useNavigate();\r\n    const handleLogin = async (e) =>{\r\n      console.log(e);\r\n        setIsLoading(true);\r\n        e.preventDefault();\r\n        await store.login();\r\n\r\n        setIsLoading(false);\r\n        navigate(\"/\");\r\n    }\r\n  return (\r\n    <div className='form-container'>\r\n      {isLoading && <div className='loading-form-div'>\r\n            <img src={loadingImg} className='loading-img' alt='Loading...'/>\r\n            </div>}\r\n        <h1 className='form-heading'>Login Page</h1>\r\n        <form onSubmit={handleLogin}>\r\n            <input \r\n                className='form-input' \r\n                placeholder='Enter Email' \r\n                value={store.loginForm.email} \r\n                onChange={store.updateLoginForm} \r\n                type=\"email\" \r\n                name=\"email\" \r\n                required\r\n            />\r\n            <input \r\n                className='form-input' \r\n                placeholder='Enter Password'\r\n                value={store.loginForm.password} \r\n                onChange={store.updateLoginForm} \r\n                type=\"password\" \r\n                name=\"password\" \r\n                required\r\n            />\r\n            <button className='form-button'>Login</button>\r\n        </form>\r\n      <div className='form-link'>Are you not registered?<Link to=\"/users/signup\">SignUp</Link></div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}