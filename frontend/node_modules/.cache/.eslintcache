[{"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\index.js":"1","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\App.js":"2","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\RequireAuth.jsx":"3","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Header.jsx":"4","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\SignupPage.jsx":"5","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Home.jsx":"6","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LoginPage.jsx":"7","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LogoutPage.jsx":"8","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\AuthStore.js":"9","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\service\\service.js":"10","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Groups.jsx":"11","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\groupStore.js":"12","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Normal.jsx":"13"},{"size":428,"mtime":1702800955175,"results":"14","hashOfConfig":"15"},{"size":996,"mtime":1702793089871,"results":"16","hashOfConfig":"15"},{"size":720,"mtime":1701538442906,"results":"17","hashOfConfig":"15"},{"size":230,"mtime":1701087032171,"results":"18","hashOfConfig":"15"},{"size":2362,"mtime":1702794141547,"results":"19","hashOfConfig":"15"},{"size":11182,"mtime":1702800607221,"results":"20","hashOfConfig":"15"},{"size":1653,"mtime":1702760322586,"results":"21","hashOfConfig":"15"},{"size":566,"mtime":1701540969446,"results":"22","hashOfConfig":"15"},{"size":3163,"mtime":1702800508620,"results":"23","hashOfConfig":"15"},{"size":3323,"mtime":1697313465153,"results":"24","hashOfConfig":"15"},{"size":1238,"mtime":1702222983896,"results":"25","hashOfConfig":"15"},{"size":465,"mtime":1702223123873,"results":"26","hashOfConfig":"15"},{"size":3719,"mtime":1702792823920,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"64lxzg",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":1,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\index.js",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\App.js",["72"],[],"import {BrowserRouter , Route , Routes , Link} from 'react-router-dom';\nimport SignupPage from './components/SignupPage';\nimport LoginPage from './components/LoginPage';\nimport LogoutPage from './components/LogoutPage';\nimport Home from './components/Home';\nimport RequireAuth from './components/RequireAuth';\nimport Header from \"./components/Header\"\nimport Normal from './components/Normal';\nimport './App.css' ;\nfunction App() {\n\n  return (\n    <div className='App'>\n      <Header />\n      <BrowserRouter>\n        <Routes>\n          <Route index element={\n            <RequireAuth>\n              <Home /> \n             </RequireAuth>\n          } />\n          <Route path=\"/normalSplit\" element = {<Normal />} />\n          <Route path=\"/users/signup\" element = {<SignupPage />} />\n          <Route path=\"/users/login\" element = {<LoginPage />} />\n          <Route path=\"/users/logout\" element = {<LogoutPage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\RequireAuth.jsx",["73"],[],"import React, { useEffect } from 'react'\r\nimport authStore from './AuthStore'\r\nimport { Navigate } from 'react-router-dom';\r\nimport loadingImg from \"../loading.png\" ;\r\nexport default function RequireAuth(props) {\r\n    const store = authStore();\r\n    useEffect (()=>{\r\n        if(store.loggedIn===null){\r\n            store.checkAuth();\r\n        }\r\n    },[])\r\n    if(store.loggedIn === null){\r\n        return (\r\n            <div className='loading-div'>\r\n            <img src={loadingImg} alt='Loading...'/>\r\n            </div>\r\n        )\r\n    }\r\n    if(store.loggedIn === false){\r\n        return (\r\n            <Navigate to=\"/users/login\" />\r\n        )\r\n    }\r\n    return(\r\n        <div>{props.children}</div>\r\n    )\r\n}\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Header.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\SignupPage.jsx",["74"],[],"import React , {useState} from 'react'\r\nimport { Link , useNavigate } from 'react-router-dom'\r\nimport authStore from './AuthStore'\r\nimport loadingImg from \"../loading.png\" ;\r\nexport default function SignupPage() {\r\n  const [isLoading,setIsLoading] = useState(false);\r\n  const [exist,setExist]=useState(false);\r\n    const store= authStore();\r\n    const navigate = useNavigate();\r\n    const handleSignUp = async (e) =>{\r\n      setIsLoading(true);\r\n        e.preventDefault();\r\n        let res = store.signUp();\r\n        setIsLoading(false);\r\n        console.log(res.data);\r\n        navigate(\"/users/login\");\r\n    }\r\n  return (\r\n    <div className='form-container'>\r\n    <h1 className='form-heading'>SignUp Page</h1>\r\n    {isLoading && <div className='loading-form-div'>\r\n            <img src={loadingImg} className='loading-img' alt='Loading...'/>\r\n            </div>}\r\n    <form onSubmit={handleSignUp}>\r\n        <input \r\n                className='form-input' \r\n                placeholder='Enter Your Name'\r\n                value={store.signUpForm.name} \r\n                onChange={store.updateSignUpForm} \r\n                name=\"name\" \r\n                required\r\n        />\r\n        <input \r\n                className='form-input' \r\n                placeholder='Enter User Name'\r\n                value={store.signUpForm.user_name} \r\n                onChange={store.updateSignUpForm} \r\n                name=\"user_name\" \r\n                required\r\n        />\r\n        <input \r\n            className='form-input' \r\n            placeholder='Enter Email' \r\n            value={store.signUpForm.email} \r\n            onChange={store.updateSignUpForm} \r\n            type=\"email\" \r\n            name=\"email\" \r\n            required\r\n        />\r\n        <input \r\n            className='form-input' \r\n            placeholder='Enter Password'\r\n            value={store.signUpForm.password} \r\n            onChange={store.updateSignUpForm} \r\n            type=\"password\" \r\n            name=\"password\" \r\n            required\r\n        />\r\n        <button className='form-button'>SignUp</button>\r\n    </form>\r\n    {\r\n      exist &&   <div className='warning'>* username already exist*</div>\r\n    }\r\n  <div className='form-link'>Are you already registered?<Link to=\"/users/login\">Login</Link></div>\r\n  <div className='warning'>* username should be unique *</div>\r\n\r\n</div>\r\n  )\r\n}\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Home.jsx",["75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94"],[],"import React, {useState, useEffect} from 'react'\r\nimport billCalculator from '../service/service';\r\nimport axios from \"axios\";\r\nimport delImg from \"../delete.png\" ;\r\nimport loadingImg from \"../loading.png\" ;\r\nimport paymentImg from \"../payment.png\" ;\r\nimport {Link} from \"react-router-dom\";\r\nimport Groups from './Groups';\r\nexport default function Home() {\r\n\r\n    const memberList =[]\r\n    const [userDetails,setUserDetails] = useState(\"\");\r\n    const [no_need_to_split , set_no_split] =useState(false);\r\n    const [res,getRes] = useState();\r\n    const [showExpenses,setShowExpenses] = useState(true);\r\n    const [members, setMembers] = useState([]);\r\n    const [createForm, setCreateForm] = useState({\r\n        payer: \"\",\r\n        amount: \"\",\r\n    });\r\n\r\n    const [groupList, setGroupList] = useState(null);\r\n    const [selectedGroup, setSelectedGroup] = useState([]);\r\n    const [usersList,setUsersList] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [expenseInput, setExpenseInput] = useState('');\r\n    const [bills, setBills] = useState([]);\r\n    const [myGroups , setMyGroups] = useState([]);\r\n    const [allUsers,setAllUsers] = useState([]);\r\n    const [selectedUsers, setSelectedUsers] = useState([]);\r\n    const [createdGroupName,setCreatedGroupName]=useState(\"\");\r\n\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const updateCreateFormField = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        setCreateForm({\r\n          ...createForm,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchUserDetails();\r\n    }, []);\r\n\r\n    const fetchUserDetails = async() =>{\r\n        let token=localStorage.getItem(\"accesstoken\")\r\n        axios.defaults.headers.common['token'] = token ;\r\n        const res = await axios.get('/users/userDetails');\r\n        setUserDetails(res.data);\r\n        const res2 = await axios.get('/users/allUsers');\r\n        const total_users=res2.data;\r\n        for(let i=0;i<total_users.length;i++){\r\n            if(res.data._id===total_users[i]._id){\r\n                // console.log(res.data._id);\r\n                total_users.splice(i,1);\r\n            }\r\n        }\r\n        \r\n        fetchGroups(res.data);\r\n        setAllUsers(total_users);\r\n    }\r\n\r\n    const createBill = async (e) => {\r\n        try{\r\n            setIsLoading(true);\r\n        e.preventDefault();\r\n        // console.log(createForm);\r\n        let userId =  createForm.payer;\r\n        let amount = createForm.amount;\r\n        amount = parseInt(createForm.amount);\r\n        let OldBill;\r\n        for(let bill of selectedGroup.bills){\r\n            if(bill.payer_id===userId){\r\n                OldBill=bill._id;\r\n                break;\r\n            }\r\n        }\r\n        let res ;\r\n        if(!OldBill){\r\n            // console.log(selectedGroup._id);\r\n             res = await axios.post(`/bills/addBill/${selectedGroup._id}`, {userId,amount});\r\n        }\r\n        else{ \r\n            // console.log(OldBill);\r\n            // console.log(selectedGroup._id);\r\n             res = await axios.put(`/bills/updateBill/${OldBill}/${selectedGroup._id}`, {userId,amount});\r\n        }\r\n\r\n        setCreateForm({\r\n          payer: \"\",\r\n          amount: \"\",\r\n        });\r\n        handleGroupClick(selectedGroup._id);\r\n        // console.log(res);\r\n        setIsLoading(false);\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const deleteMember = async (e) => {\r\n        setIsLoading(true);\r\n        // Delete the note\r\n        const billId = e;\r\n        const groupId =selectedGroup._id;\r\n        const res = await axios.delete(`/bills/deleteBill/${billId}/${groupId}`);\r\n        handleGroupClick(selectedGroup._id);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleSplitBills  = async () =>{\r\n        set_no_split(false);\r\n        // if(members.length){ \r\n        //     let expense = 0;\r\n        //     for(let member of members)expense+=member.amount;\r\n        //     const billresult=billCalculator(members,expense);\r\n        //     if(billresult.length === 0){\r\n        //     set_no_split(true);\r\n        //     }\r\n        //     else {\r\n        //     getRes(billresult);\r\n        //     }\r\n        // }\r\n        setIsLoading(true);\r\n        console.log(selectedGroup);\r\n        const groupId=selectedGroup._id;\r\n        const res = await axios.get(`./bills/splitBills/${groupId}`);\r\n        // console.log(res.data);\r\n        if(!res.data.length)set_no_split(true);\r\n        else getRes(res.data);\r\n        setShowExpenses(false);\r\n        setIsLoading(false);\r\n    }\r\n\r\n    const handleReset  =async () =>{\r\n        setIsLoading(true);\r\n        let groupId=selectedGroup._id;\r\n        if(groupId){\r\n            const res = await axios.delete(`/bills/deleteBills/${groupId}`);\r\n            // Update state\r\n            handleGroupClick(selectedGroup._id);\r\n        }\r\n        \r\n        setIsLoading(false);\r\n    }\r\n    const handleShowExpenses = async () => {\r\n        getRes();\r\n        setShowExpenses(!showExpenses);\r\n        set_no_split(false)\r\n    }\r\n\r\n\r\n    \r\n      const fetchGroups = async(user) => {\r\n        try{\r\n            const res = await axios.get(`/groups/${user._id}`);\r\n            let groupList=res.data.groups;\r\n            setGroupList(groupList);\r\n        }\r\n        catch(err) {\r\n            console.log('Error fetching groups:', err);\r\n            }\r\n      }\r\n      const handleGroupClick = async(groupId) =>{\r\n        try {\r\n            setIsLoading(true);\r\n            const res = await axios.get(`/groups/group-details/${groupId}`); \r\n            setSelectedGroup(res.data);\r\n            // console.log(res.data.users);\r\n            setUsersList(res.data.users);\r\n            // console.log(usersList);\r\n            setMembers(res.data.bills);\r\n            setIsLoading(false);\r\n            set_no_split(false);\r\n            setShowExpenses(true);\r\n            getRes();\r\n          } catch (err) {\r\n            setIsLoading(false);\r\n            console.log('Error fetching group details:', err);\r\n          }\r\n      }\r\n   \r\n      const handleCheckboxChange = (userId) => {\r\n        const isChecked = selectedUsers.includes(userId);\r\n        if (isChecked) {\r\n          setSelectedUsers((prevSelectedUsers) => prevSelectedUsers.filter((id) => id !== userId));\r\n        } else {\r\n          setSelectedUsers((prevSelectedUsers) => [...prevSelectedUsers, userId]);\r\n        }\r\n      };\r\n    \r\n      const handleCreateGroup = async(e) => {\r\n        try{\r\n            e.preventDefault();\r\n            setIsLoading(true);\r\n            if(selectedUsers.length!=0){\r\n                const create_group = await axios.post('/groups/create-group',{group_name:createdGroupName,users:selectedUsers}); \r\n                setCreatedGroupName(\"\");\r\n                setSelectedUsers([]);\r\n                fetchGroups(userDetails);\r\n            }\r\n            setIsLoading(false);\r\n        }\r\n        catch(err){\r\n            setIsLoading(false);\r\n            console.log(err);\r\n\r\n        }\r\n      };\r\n\r\n      return (\r\n<div>\r\n  <button className='log-out'>\r\n    <Link className=\"link\" to=\"users/logout\">Logout</Link>\r\n  </button>\r\n\r\n  <div className='container-group'>\r\n    <h2 className='heading-group'>Group Names:</h2>\r\n    <div className='member-list'>\r\n      <ul className='member-item'>\r\n        {groupList && groupList.map(group => (\r\n          <li className='member-name' key={group._id} onClick={() => handleGroupClick(group._id)}>\r\n            <div className='group-name'>{group.group_name}</div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    <button>\r\n      <Link className=\"link\" to=\"/normalSplit\">Normal Split</Link>\r\n    </button>\r\n  </div>\r\n\r\n  <div className='container-users'>\r\n    {allUsers ? (\r\n      <div className='form-group'>\r\n        <h2 className='heading'>Select Users</h2>\r\n        <form onSubmit={handleCreateGroup}>\r\n          <input placeholder='Group Name' type='text' value={createdGroupName} onChange={(e) => setCreatedGroupName(e.target.value)} required />\r\n          {allUsers.map((user) => (\r\n            <div key={user._id}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={user._id}\r\n                value={user._id}\r\n                onChange={() => handleCheckboxChange(user._id)}\r\n                checked={selectedUsers.includes(user._id)}\r\n              />\r\n              <label htmlFor={user._id}>{user.user_name}</label>\r\n            </div>\r\n          ))}\r\n          <button className='user-button'>Create Group</button>\r\n        </form>\r\n      </div>\r\n    ) : (\r\n      <p>Loading users...</p>\r\n    )}\r\n  </div>\r\n\r\n  <div className='container'>\r\n    <h2 className='heading'>{userDetails.user_name}, Add Expense Here:</h2>\r\n    <div>\r\n      <form onSubmit={createBill}>\r\n        <select onChange={updateCreateFormField} value={createForm.payer} name=\"payer\" required>\r\n          <option value=\"\">Select User</option>\r\n          {usersList.length && usersList.map((user) => (\r\n            <option key={user._id} value={user._id}>\r\n              {user.user_name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <input onChange={updateCreateFormField} value={createForm.amount} name=\"amount\" placeholder='Amount' type='number' required />\r\n        <button type='submit'>Add Expense</button>\r\n      </form>\r\n    </div>\r\n\r\n    {(members.length > 0 && !res) && (\r\n      <div className=\"member-list\">\r\n        <h2>Member List:</h2>\r\n        <ul className='member-item'>\r\n          {members && <b><li><div>Payer:</div>Amount:</li></b>}\r\n          {members.map((member, index) => (\r\n            <li key={index}>\r\n              <div className='payer'>{member.payer}</div>\r\n              <div className='set-del'>\r\n                <div className='amount'>Rs {member.amount}</div>\r\n                <button className='del' onClick={() => deleteMember(member._id)}><img className=\"del-img\" src={delImg} /></button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}\r\n\r\n    <div>\r\n      {showExpenses && <button onClick={handleSplitBills}>Split Bill</button>}\r\n      {!showExpenses && <button onClick={handleShowExpenses}>Show Expenses</button>}\r\n      <button onClick={handleReset}>Reset</button>\r\n      {isLoading && <img className='processing' src={loadingImg} alt='Loading' />}\r\n      {no_need_to_split && (\r\n        <div className='no_split'>\r\n          Don't Worry About Splitting, It's already done.\r\n        </div>\r\n      )}\r\n      {res && (\r\n        <div className=\"member-list\">\r\n          <h2>Amount:</h2>\r\n          <ul className='member-item'>\r\n            {res && <b><li>Payer<div>Amount</div>Reciever</li></b>}\r\n            {res.map((member) => (\r\n              <li key={member}>\r\n                <div className='payer'>{member[0]}</div>\r\n                <div className='amount'> Rs {member[2].toFixed(2)}</div>\r\n                <div className='reciever'>{member[1]}</div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n\r\n    {!res && members.length == 0 && <img className='payment-img' src={paymentImg} />}\r\n  </div>\r\n</div>\r\n\r\n  )\r\n}\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LoginPage.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LogoutPage.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\AuthStore.js",["95","96"],[],"import React from 'react';\r\nimport {create} from \"zustand\" ;\r\nimport  axios from \"axios\";\r\nimport { Navigate } from 'react-router-dom';\r\nconst authStore = create((set) => ({\r\n    loggedIn : null ,\r\n\r\n    loginForm:{\r\n        email:\"\",\r\n        password : \"\",\r\n    },\r\n    updateLoginForm :(e) => {\r\n        const {name , value} = e.target ;\r\n        set((state) => {\r\n            return{\r\n                loginForm:{\r\n                    ...state.loginForm,\r\n                    [name] : value\r\n                },\r\n            };\r\n        });\r\n    },\r\n    login : async () =>{\r\n        try{\r\n            // console.log(loginForm);\r\n            const {loginForm} = authStore.getState();\r\n            const item =localStorage.getItem('accesstoken');\r\n            // console.log(item)\r\n            const res = await axios.post(\"/users/login\",loginForm) \r\n            // console.log(res); \r\n            // localStorage.setItem(res.data)\r\n            // console.log(res.data.accesstoken);\r\n            localStorage.setItem(\"accesstoken\",res.data.accesstoken)\r\n            set(\r\n                {loggedIn:true ,    \r\n                loginForm : {\r\n                    email : \"\",\r\n                    password : \"\"\r\n                }\r\n            });\r\n            \r\n        }catch(err){\r\n            console .log(err);\r\n        }\r\n    } , \r\n    checkAuth : async () =>{\r\n        try{\r\n            // await axios.get(\"/check-auth\", {withCredentials: true}); // not rquire set default in index.js\r\n            // await axios.get(\"/check-auth\");\r\n            // set({loggedIn : true});\r\n            await axios.get(\"/users/check-auth\");\r\n\r\n            set({loggedIn : true});\r\n        }catch(err){\r\n            set({loggedIn : false});\r\n            console.log(err);\r\n            return (\r\n                <Navigate to=\"/users/login\" />\r\n            )\r\n        }\r\n        \r\n    } ,\r\n\r\n    signUpForm:{\r\n        name:\"\",\r\n        user_name:\"\",\r\n        email:\"\",\r\n        password : \"\",\r\n    },\r\n    updateSignUpForm :(e) => {\r\n        const {name , value} = e.target ;\r\n        set((state) => {\r\n            return{\r\n                signUpForm:{\r\n                    ...state.signUpForm,\r\n                    [name] : value\r\n                },\r\n            };\r\n        });\r\n    },\r\n    signUp : async () => {\r\n        try{\r\n            const {signUpForm} = authStore.getState();\r\n            console.log(signUpForm);\r\n            const res = await axios.post(\"/users/signup\",signUpForm,{\r\n                withCredentials: true\r\n            })  \r\n            set({\r\n                signUpForm : {\r\n                    user_name:\"\",\r\n                    email : \"\",\r\n                    password : \"\"\r\n                }\r\n            });\r\n            console.log(res);\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    } ,\r\n    logOut : async () =>{\r\n        try{\r\n            // const res = await axios.get(\"/users/logout\");\r\n                localStorage.clear();\r\n                set({loggedIn : false});\r\n                console.log(\"logged_out\");\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n}));\r\nexport default authStore;\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\service\\service.js",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Groups.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\groupStore.js",["97","98","99","100","101","102","103","104","105","106","107"],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Normal.jsx",[],[],{"ruleId":"108","severity":1,"message":"109","line":1,"column":42,"nodeType":"110","messageId":"111","endLine":1,"endColumn":46},{"ruleId":"112","severity":1,"message":"113","line":11,"column":7,"nodeType":"114","endLine":11,"endColumn":9,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":7,"column":16,"nodeType":"110","messageId":"111","endLine":7,"endColumn":24},{"ruleId":"108","severity":1,"message":"117","line":2,"column":8,"nodeType":"110","messageId":"111","endLine":2,"endColumn":22},{"ruleId":"108","severity":1,"message":"118","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":14},{"ruleId":"108","severity":1,"message":"119","line":11,"column":11,"nodeType":"110","messageId":"111","endLine":11,"endColumn":21},{"ruleId":"108","severity":1,"message":"120","line":25,"column":12,"nodeType":"110","messageId":"111","endLine":25,"endColumn":24},{"ruleId":"108","severity":1,"message":"121","line":25,"column":26,"nodeType":"110","messageId":"111","endLine":25,"endColumn":41},{"ruleId":"108","severity":1,"message":"122","line":26,"column":12,"nodeType":"110","messageId":"111","endLine":26,"endColumn":24},{"ruleId":"108","severity":1,"message":"123","line":26,"column":26,"nodeType":"110","messageId":"111","endLine":26,"endColumn":41},{"ruleId":"108","severity":1,"message":"124","line":27,"column":12,"nodeType":"110","messageId":"111","endLine":27,"endColumn":17},{"ruleId":"108","severity":1,"message":"125","line":27,"column":19,"nodeType":"110","messageId":"111","endLine":27,"endColumn":27},{"ruleId":"108","severity":1,"message":"126","line":28,"column":12,"nodeType":"110","messageId":"111","endLine":28,"endColumn":20},{"ruleId":"108","severity":1,"message":"127","line":28,"column":23,"nodeType":"110","messageId":"111","endLine":28,"endColumn":34},{"ruleId":"112","severity":1,"message":"128","line":45,"column":8,"nodeType":"114","endLine":45,"endColumn":10,"suggestions":"129"},{"ruleId":"108","severity":1,"message":"130","line":88,"column":14,"nodeType":"110","messageId":"111","endLine":88,"endColumn":17},{"ruleId":"108","severity":1,"message":"130","line":109,"column":15,"nodeType":"110","messageId":"111","endLine":109,"endColumn":18},{"ruleId":"108","severity":1,"message":"130","line":142,"column":19,"nodeType":"110","messageId":"111","endLine":142,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":199,"column":36,"nodeType":"133","messageId":"134","endLine":199,"endColumn":38},{"ruleId":"108","severity":1,"message":"135","line":200,"column":23,"nodeType":"110","messageId":"111","endLine":200,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":290,"column":82,"nodeType":"138","endLine":290,"endColumn":122},{"ruleId":"131","severity":1,"message":"139","line":325,"column":29,"nodeType":"133","messageId":"134","endLine":325,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":325,"column":37,"nodeType":"138","endLine":325,"endColumn":85},{"ruleId":"108","severity":1,"message":"140","line":27,"column":19,"nodeType":"110","messageId":"111","endLine":27,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":43,"column":13,"nodeType":"143","messageId":"144","endLine":43,"endColumn":25,"fix":"145"},{"ruleId":"108","severity":1,"message":"146","line":1,"column":8,"nodeType":"110","messageId":"111","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"147","line":2,"column":9,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"108","severity":1,"message":"148","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"108","severity":1,"message":"149","line":6,"column":11,"nodeType":"110","messageId":"111","endLine":6,"endColumn":30},{"ruleId":"108","severity":1,"message":"150","line":7,"column":16,"nodeType":"110","messageId":"111","endLine":7,"endColumn":25},{"ruleId":"108","severity":1,"message":"151","line":7,"column":26,"nodeType":"110","messageId":"111","endLine":7,"endColumn":38},{"ruleId":"152","severity":2,"message":"153","line":7,"column":42,"nodeType":"110","endLine":7,"endColumn":50},{"ruleId":"108","severity":1,"message":"154","line":8,"column":16,"nodeType":"110","messageId":"111","endLine":8,"endColumn":19},{"ruleId":"108","severity":1,"message":"155","line":8,"column":33,"nodeType":"110","messageId":"111","endLine":8,"endColumn":38},{"ruleId":"108","severity":1,"message":"124","line":8,"column":39,"nodeType":"110","messageId":"111","endLine":8,"endColumn":44},{"ruleId":"108","severity":1,"message":"156","line":8,"column":45,"nodeType":"110","messageId":"111","endLine":8,"endColumn":56},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["157"],"'setExist' is assigned a value but never used.","'billCalculator' is defined but never used.","'Groups' is defined but never used.","'memberList' is assigned a value but never used.","'selectedUser' is assigned a value but never used.","'setSelectedUser' is assigned a value but never used.","'expenseInput' is assigned a value but never used.","'setExpenseInput' is assigned a value but never used.","'bills' is assigned a value but never used.","'setBills' is assigned a value but never used.","'myGroups' is assigned a value but never used.","'setMyGroups' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserDetails'. Either include it or remove the dependency array.",["158"],"'res' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'create_group' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'item' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property log.","MemberExpression","unexpectedWhitespace",{"range":"159","text":"160"},"'React' is defined but never used.","'axios' is defined but never used.","'Navigate' is defined but never used.","'updateSelectedGroup' is assigned a value but never used.","'groupInfo' is assigned a value but never used.","'setGroupInfo' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"updateSelectedGroup\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'_id' is assigned a value but never used.","'users' is assigned a value but never used.","'group_admin' is assigned a value but never used.",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},[1301,1303],".","Update the dependencies array to be: [store]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchUserDetails]",{"range":"167","text":"168"},[353,355],"[store]",[1627,1629],"[fetchUserDetails]"]