[{"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\index.js":"1","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\App.js":"2","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\RequireAuth.jsx":"3","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Header.jsx":"4","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\SignupPage.jsx":"5","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Home.jsx":"6","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LoginPage.jsx":"7","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LogoutPage.jsx":"8","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\AuthStore.js":"9","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\service\\service.js":"10"},{"size":428,"mtime":1697381789991,"results":"11","hashOfConfig":"12"},{"size":872,"mtime":1697297517293,"results":"13","hashOfConfig":"12"},{"size":714,"mtime":1697347490208,"results":"14","hashOfConfig":"12"},{"size":230,"mtime":1697292963325,"results":"15","hashOfConfig":"12"},{"size":1556,"mtime":1697372800091,"results":"16","hashOfConfig":"12"},{"size":6196,"mtime":1697381242644,"results":"17","hashOfConfig":"12"},{"size":1647,"mtime":1697352513563,"results":"18","hashOfConfig":"12"},{"size":560,"mtime":1697286217748,"results":"19","hashOfConfig":"12"},{"size":2737,"mtime":1697831191648,"results":"20","hashOfConfig":"12"},{"size":3323,"mtime":1697313465153,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"64lxzg",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\index.js",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\App.js",["56"],[],"import {BrowserRouter , Route , Routes , Link} from 'react-router-dom';\nimport SignupPage from './components/SignupPage';\nimport LoginPage from './components/LoginPage';\nimport LogoutPage from './components/LogoutPage';\nimport Home from './components/Home';\nimport RequireAuth from './components/RequireAuth';\nimport Header from \"./components/Header\"\nimport './App.css' ;\nfunction App() {\n\n  return (\n    <div className='App'>\n      <Header />\n      <BrowserRouter>\n        <Routes>\n          <Route index element={\n            <RequireAuth>\n              <Home />\n             </RequireAuth>\n          } />\n          <Route path=\"/login\" element = {<LoginPage />} />\n          <Route path=\"/signup\" element = {<SignupPage />} />\n          <Route path=\"/logout\" element = {<LogoutPage />} />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n",["57"],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\RequireAuth.jsx",["58"],[],"import React, { useEffect } from 'react'\r\nimport authStore from './AuthStore'\r\nimport { Navigate } from 'react-router-dom';\r\nimport loadingImg from \"../loading.png\" ;\r\nexport default function RequireAuth(props) {\r\n    const store = authStore();\r\n    useEffect (()=>{\r\n        if(store.loggedIn===null){\r\n            store.checkAuth();\r\n        }\r\n    },[])\r\n    if(store.loggedIn === null){\r\n        return (\r\n            <div className='loading-div'>\r\n            <img src={loadingImg} alt='Loading...'/>\r\n            </div>\r\n        )\r\n    }\r\n    if(store.loggedIn === false){\r\n        return (\r\n            <Navigate to=\"/login\" />\r\n        )\r\n    }\r\n    return(\r\n        <div>{props.children}</div>\r\n    )\r\n}\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Header.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\SignupPage.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\Home.jsx",["59","60","61","62","63","64","65","66"],[],"import React, {useState, useEffect} from 'react'\r\nimport billCalculator from '../service/service';\r\nimport axios from \"axios\";\r\nimport delImg from \"../delete.png\" ;\r\nimport loadingImg from \"../loading.png\" ;\r\nimport paymentImg from \"../payment.png\" ;\r\nimport {Link} from \"react-router-dom\";\r\nexport default function Home() {\r\n\r\n    const memberList =[]\r\n    const [no_need_to_split , set_no_split] =useState(false);\r\n    const [res,getRes] = useState();\r\n    const [showExpenses,setShowExpenses] = useState(true);\r\n    const [members, setMembers] = useState([]);\r\n    const [createForm, setCreateForm] = useState({\r\n        payer: \"\",\r\n        amount: \"\",\r\n    });\r\n    const [isLoading,setIsLoading] = useState(false);\r\n    const updateCreateFormField = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        setCreateForm({\r\n          ...createForm,\r\n          [name]: value,\r\n        });\r\n      };\r\n\r\n    useEffect(() => {\r\n        fetchBills();\r\n    }, []);\r\n\r\n    const fetchBills = async () => {\r\n        try{\r\n            let token=localStorage.getItem(\"accesstoken\")\r\n            axios.defaults.headers.common['token'] = token ;\r\n            const res = await axios.get(\"/bills\");\r\n            // Set to state\r\n            setMembers(res.data.bills);\r\n        }catch(err){\r\n            console.log(err);   \r\n          }\r\n    };\r\n\r\n    const createBill = async (e) => {\r\n        setIsLoading(true);\r\n        e.preventDefault();\r\n        // check present or not in members if yes just do update\r\n        const member =  members.find((member) => member.payer === createForm.payer.toLowerCase());\r\n        if(member){\r\n            console.log(member);\r\n            const payer = member.payer;\r\n            const amount = parseInt(member.amount) + parseInt(createForm.amount);\r\n            member.amount = amount;\r\n            const res = await axios.put(`/updateBill/${member._id}`, {payer:payer,amount:amount});\r\n        }\r\n        else{ // not present create and add in member\r\n            const payer = createForm.payer.toLowerCase();\r\n            const amount = createForm.amount;\r\n            console.log(payer);\r\n            const res = await axios.post(\"/addBill\", {payer,amount});\r\n        }\r\n        setCreateForm({\r\n          payer: \"\",\r\n          amount: \"\",\r\n        });\r\n        fetchBills();\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const deleteMember = async (e) => {\r\n        setIsLoading(true);\r\n        // Delete the note\r\n        const _id = e;\r\n        const res = await axios.delete(`/deleteBill/${_id}`);\r\n        // Update state\r\n        fetchBills();\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleSplitBills  = () =>{\r\n        set_no_split(false);\r\n        if(members.length){ \r\n            let expense = 0;\r\n            for(let member of members)expense+=member.amount;\r\n            const billresult=billCalculator(members,expense);\r\n            if(billresult.length === 0){\r\n            set_no_split(true);\r\n            }\r\n            else {\r\n            getRes(billresult);\r\n            }\r\n        }\r\n        setShowExpenses(false);\r\n    }\r\n\r\n    const handleReset  =async () =>{\r\n        setIsLoading(true);\r\n        const res = await axios.delete(`/deleteBills/`);\r\n        // Update state\r\n        fetchBills();\r\n        setIsLoading(false);\r\n    }\r\n    const handleShowExpenses = async () => {\r\n        getRes();\r\n        setShowExpenses(!showExpenses);\r\n        set_no_split(false)\r\n    }\r\n      return (\r\n    <div>\r\n        <button className='log-out' ><Link className=\"link\" to=\"logout\">Logout</Link></button>\r\n        <div className='container'>\r\n            <h2 className='heading'>Add Expense Here :</h2>\r\n            <div className='form-group'>\r\n                <form onSubmit={createBill}>\r\n                    <input onChange={updateCreateFormField} value={createForm.payer} name=\"payer\" placeholder='Member Name' type=\"text\" required/>\r\n                    <input onChange={updateCreateFormField} value={createForm.amount} name=\"amount\" placeholder='Amount' type='number' required/>\r\n                    <button type='submit'>Add Expense</button>\r\n                </form>\r\n            </div>\r\n            {(members.length>0 && !res) && <div className=\"member-list\">\r\n            <h2>Member List:</h2>\r\n            <ul className='member-item'>\r\n            {members && <b><li><div>Payer:</div>Amount:</li></b>}\r\n                {members.map((member, index) => (\r\n                <li key={index}>\r\n                    <div className='payer' >{member.payer}</div>\r\n                    <div className='set-del'>\r\n                    <div className='amount' >Rs {member.amount}</div>\r\n                    <button className='del' onClick={()=>deleteMember(member._id)}><img className=\"del-img\" src={delImg} /> </button>\r\n                    </div>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            </div>  \r\n        }\r\n            <div>    \r\n                {showExpenses && <button onClick={handleSplitBills}>Split Bill</button>}\r\n                {!showExpenses && <button onClick={handleShowExpenses}>Show Expenses</button>}\r\n                <button onClick={handleReset}>Reset</button> \r\n                {isLoading && <img className='processing' src={loadingImg} alt='Loading' />}\r\n            {\r\n                no_need_to_split && <div className='no_split'>\r\n                    Don't Worry About Splitting , It's already done.\r\n                </div>\r\n            }\r\n            {res && <div className=\"member-list\">\r\n            <h2>Amount:</h2>\r\n            <ul className='member-item'>\r\n                {res && <b><li>Payer<div>Amount</div>Reciever</li></b>}\r\n                {res.map((member) => (\r\n                <li  key={member}>\r\n                    <div className='payer'>{member[0]}</div> \r\n                    <div className='amount'>  Rs {member[2].toFixed(2)} \r\n                    </div> <div className='reciever'>{member[1]}</div>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n            </div>}\r\n            </div>\r\n            \r\n            { !res && members.length==0 && <img className='payment-img' src={paymentImg}/>}\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LoginPage.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\LogoutPage.jsx",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\components\\AuthStore.js",[],[],"C:\\Users\\Aman\\Desktop\\split-expense\\frontend\\src\\service\\service.js",[],[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":42,"nodeType":"69","messageId":"70","endLine":1,"endColumn":46},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":11,"column":7,"nodeType":"75","endLine":11,"endColumn":9,"suggestions":"76"},{"ruleId":"67","severity":1,"message":"77","line":10,"column":11,"nodeType":"69","messageId":"70","endLine":10,"endColumn":21},{"ruleId":"67","severity":1,"message":"78","line":55,"column":19,"nodeType":"69","messageId":"70","endLine":55,"endColumn":22},{"ruleId":"67","severity":1,"message":"78","line":61,"column":19,"nodeType":"69","messageId":"70","endLine":61,"endColumn":22},{"ruleId":"67","severity":1,"message":"78","line":75,"column":15,"nodeType":"69","messageId":"70","endLine":75,"endColumn":18},{"ruleId":"67","severity":1,"message":"78","line":99,"column":15,"nodeType":"69","messageId":"70","endLine":99,"endColumn":18},{"ruleId":"79","severity":1,"message":"80","line":130,"column":84,"nodeType":"81","endLine":130,"endColumn":124},{"ruleId":"82","severity":1,"message":"83","line":162,"column":37,"nodeType":"84","messageId":"85","endLine":162,"endColumn":39},{"ruleId":"79","severity":1,"message":"80","line":162,"column":44,"nodeType":"81","endLine":162,"endColumn":91},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-new-object",["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["87"],"'memberList' is assigned a value but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-object-constructor",{"desc":"88","fix":"89"},"Update the dependencies array to be: [store]",{"range":"90","text":"91"},[353,355],"[store]"]